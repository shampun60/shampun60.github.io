//==================================================================================================================================================
//==================================================================================================================================================
//=========================================================ОСНОВНОЙ ШРИФТ============================================================================
@import url('https://fonts.googleapis.com/css2?family=Inter&display=swap');
@import url('https://fonts.googleapis.com/css2?family=Noto+Serif+Hebrew:wght@500&display=swap');

//======================================<ПОДКЛЮЧАЕМ-ШРИФТ-КОТОРОГО-НЕТ-НА-GOOGLE-FONTS>=========================================================================================================================================================================================================================================================
//=======================================<MAIN-FONT>========================================================================================================================================================================================================================================================
//PT Root UI
@font-face {
	font-family: 'PT Root UI';
	src: url('../font/PTRootUI-Bold.eot');
	src: url('../font/PTRootUI-Bold.eot?#iefix') format('embedded-opentype'),
		url('../font/PTRootUI-Bold.woff2') format('woff2'),
		url('../font/PTRootUI-Bold.woff') format('woff'),
		url('../font/PTRootUI-Bold.ttf') format('truetype');
	font-weight: 700;
	font-style: normal;
}

@font-face {
	font-family: 'PT Root UI';
	src: url('../font/PTRootUI-Medium.eot');
	src: url('../font/PTRootUI-Medium.eot?#iefix') format('embedded-opentype'),
		url('../font/PTRootUI-Medium.woff2') format('woff2'),
		url('../font/PTRootUI-Medium.woff') format('woff'),
		url('../font/PTRootUI-Medium.ttf') format('truetype');
	font-weight: 500;
	font-style: normal;
}

@font-face {
	font-family: 'PT Root UI';
	src: url('../font/PTRootUI-Regular.eot');
	src: url('../font/PTRootUI-Regular.eot?#iefix') format('embedded-opentype'),
		url('../font/PTRootUI-Regular.woff2') format('woff2'),
		url('../font/PTRootUI-Regular.woff') format('woff'),
		url('../font/PTRootUI-Regular.ttf') format('truetype');
	font-weight: 400;
	font-style: normal;
}

//Cera Pro
@font-face {
	font-family: 'Cera Pro';
	src: url('../font/CeraPro-Regular.eot');
	src: url('../font/CeraPro-Regular.eot?#iefix') format('embedded-opentype'),
		url('../font/CeraPro-Regular.woff2') format('woff2'),
		url('../font/CeraPro-Regular.woff') format('woff'),
		url('../font/CeraPro-Regular.ttf') format('truetype');
	font-weight: 400;
	font-style: normal;
}

//Circe
@font-face {
	font-family: 'Circe';
	src: url('../font/Circe-Bold.eot');
	src: url('../font/Circe-Bold.eot?#iefix') format('embedded-opentype'),
		url('../font/Circe-Bold.woff2') format('woff2'),
		url('../font/Circe-Bold.woff') format('woff'),
		url('../font/Circe-Bold.ttf') format('truetype');
	font-weight: 700;
	font-style: normal;
}

//RF Tone
@font-face {
	font-family: 'RFTone';
	src: url('../font/RFTone-SemiBold.eot');
	src: url('../font/RFTone-SemiBold.eot?#iefix') format('embedded-opentype'),
		url('../font/RFTone-SemiBold.woff2') format('woff2'),
		url('../font/RFTone-SemiBold.woff') format('woff'),
		url('../font/RFTone-SemiBold.ttf') format('truetype');
	font-weight: 600;
	font-style: normal;
}

@font-face {
	font-family: 'RFTone';
	src: url('../font/RFTone-Regular.eot');
	src: url('../font/RFTone-Regular.eot?#iefix') format('embedded-opentype'),
		url('../font/RFTone-Regular.woff2') format('woff2'),
		url('../font/RFTone-Regular.woff') format('woff'),
		url('../font/RFTone-Regular.ttf') format('truetype');
	font-weight: 400;
	font-style: normal;
}



//===============================================================================================================================================================================================================================================================================================





//===============================================================================================================================================================================================================================================================================================
//Размер шрифта по умолчанию
$defaultSize: 16px;
//Цвет по умолчанию
$defaultColor: #444;

//Переменные разрешений
$md7: 319.98px;
$md6: 478.98px;
$md5: 767.98px;
$md4: 991.98px;
$md3: 1023.98px;
$md2: 1151.98px;
$md1: 1439.98px;

//===================================<ПЕРЕМЕННЫЕ-ЦВЕТОВ>============================================================================================================================================================================================================================================================
/*

$darkColor: ;

$cyanColor: ;
$greenColor: #6EFF24;
$purpleColor: #9124FF;

$darkGreenColor: #101E09;

$lightGrayColor: #6E7191;

$orangeColor: #F56E1E;
$grayColor: #333333;
$greenYellowColor: #E8C300;
$lightBlueColor: #99A5B2;
$veryLightBlueColor: #96A6B3;
$darkBlueColor: #2660AA;
$darkOrangeColor: #DE933C;
$lightOrangeColor: #FEC053;
$blueColor: #1469C8;
$linearOrangeColor: linear-gradient(90deg, rgba(222, 147, 60, 1) 0%, rgba(254, 192, 83, 1) 100%);
$redColor: #FF0000;

$lightGreenYellowColor: #FFD600;

$grayColor: #4E4B66;
$darkGrayColor: #2a2836;
$veryLightGrayColor: #A0A3BD;
$cyanColor: #2293FC;
*/


$orangeColor: #e89f71;
$blueColor: #3697E2;
$yellowColor: #EEEE36;
$greenColor: #46AC44;
$darkGrayColor: #15191C;
$grayColor: #3A3F43;
$mediumGrayColor: #535E69;
$lightGrayColor: #747883;
$veryLightGrayColor: #9A9C9E;
$darkBlueColor: #0867D6;
$whiteColor: #D7D9DC;
//===================================<ШИРИНА-КОНТЕЙНЕРА>============================================================================================================================================================================================================================================================

$containerWidth: 1336px;

//===================================<ОСНОВНОЙ-ШРИФТ>============================================================================================================================================================================================================================================================

$fontFamily: 'PT Root UI';


//===================================<ФУНКЦИИ ДЛЯ ПЕРЕВОДА В ЕДИНИЦЫ ИЗМЕРЕНИЯ>============================================================================================================================================================================================================================================================

//to %
@function prc($pxOne, $pxTwo) {
	$result: math.div($pxOne, $pxTwo) * 100%;
	@return $result;
}

//to rem
@function rem($px) {
	$result: math.div($px, 16)+rem;
	@return $result;
}

//to em
@function em($px) {
	$result: math.div($em, 16)+em;
	@return $result;
}

//=======================================<АДАПТИВНОЕ СВОЙСТВО>========================================================================================================================================================================================================================================================

$maxWidth: 1920;
$maxWidthContainer: 1306;

@mixin adaptiv-value($property, $startSize, $minSize, $type) {
	$addSize: $startSize - $minSize;

	@if $type==1 {
		//Только если меньше контейнера
		#{$property}: $startSize + px;

		@media (max-width: #{$maxWidthContainer + px}) {
			#{$property}: calc(#{$minSize + px} + #{$addSize} * ((100vw - 320px) / #{$maxWidthContainer - 320}));
		}
	}

	@else if $type ==2 {
		//Только если больше контейнера
		#{$property}: $startSize + px;

		@media (min-width: #{$maxWidthContainer + px}) {
			#{$property}: calc(#{$minSize + px} + #{$addSize} * ((100vw - 320px) / #{$maxWidth - 320}));
		}
	}

	@else {
		//Всегда
		#{$property}: calc(#{$minSize + px} + #{$addSize} * ((100vw - 320px) / #{$maxWidth - 320}));
	}
}